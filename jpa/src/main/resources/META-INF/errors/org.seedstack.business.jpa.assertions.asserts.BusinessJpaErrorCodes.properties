#
# Copyright (c) 2013-2015 by The SeedStack authors. All rights reserved.
#
# This file is part of SeedStack, An enterprise-oriented full development stack.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#

CLASS_MUST_IMPLEMENTS_A_REPOSITORY_INTERFACE.message=The class ${className}\nmust implement an interface which inherits from GenericRepository.
CLASS_MUST_IMPLEMENTS_A_REPOSITORY_INTERFACE.fix=Please implements your repository interface that extends GenericRepository and add it.
CLASS_MUST_IMPLEMENTS_A_FACTORY_INTERFACE.message=The class ${className}\nmust implement an interface which inherits from GenericFactory.
CLASS_MUST_IMPLEMENTS_A_FACTORY_INTERFACE.fix=Please implements your repository interface that extends GenericFactory and add it.
CLASS_MUST_IMPLEMENTS_A_DOMAIN_SERVICE_INTERFACE.message=The class ${className}\nmust implement an interface which is annotated by @DomainService.
CLASS_MUST_IMPLEMENTS_A_DOMAIN_SERVICE_INTERFACE.fix=Please implements your DomainService interface annotated by @DomainService and add it.
CLASS_MUST_IMPLEMENTS_A_APPLICATION_SERVICE_INTERFACE.message=The class ${className}\nmust implement an interface which is annotated by @ApplicationService.
CLASS_MUST_IMPLEMENTS_A_APPLICATION_SERVICE_INTERFACE.fix=Please implements your ApplicationService interface annotated by @ApplicationService and add it.
CLASS_MUST_IMPLEMENTS_A_DOMAIN_POLICY_INTERFACE.message=The class ${className}\nmust implement an interface which is annotated by @DomainPolicy.
CLASS_MUST_IMPLEMENTS_A_DOMAIN_POLICY_INTERFACE.fix=Please implements your DomainPolicy interface annotated by @DomainPolicy and add it.
SPECIFICATION_WITH_FAULTY_JPA_JOIN_PATH.message = The specification contain a faulty JPA join path for the property : ${property} 
SPECIFICATION_WITH_FAULTY_JPA_JOIN_PATH.fix = please check if the property "${property}" really exists
NAMEDSPECIFICATION_NOT_FOUND.message = The NamedSpecification : ${property} does not exist.
NAMEDSPECIFICATION_NOT_FOUND.fix = please check if a NamedSpecification with the property name set as "${property}" really exists.
NAMEDSPECIFICATION_UNRESOLVE_AGGREGATE_TYPE.message = Cannot resolve aggregate type for NamedSpecification : ${property}.
NAMEDSPECIFICATION_UNRESOLVE_AGGREGATE_TYPE.fix = please make sure to use a subclass of NamedSpecification with resolved generic \nor\n fill the constructor with the aggregateClass parameters.
REFERENCE_FOR_ASSOCIATION_NOT_FOUND.message = The attribut "${property}" does not exists for the aggregate "${aggregate2}".
REFERENCE_FOR_ASSOCIATION_NOT_FOUND.fix = please make sure that \nthe aggregate "${aggregate2}" contains an attribute named "${property}" \nthat could match the aggregate "${aggregate1}" id 
SPECIFICATION_SELECTION_CAN_NOT_BE_RESOLVE.message = Specification selection with name(s): ${selectionName} does not match your finder aggregates
SPECIFICATION_SELECTION_CAN_NOT_BE_RESOLVE.fix = Please only put selection names that match one of those aggregates: ${aggregateClasses}